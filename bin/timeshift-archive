#!/usr/bin/env sh

set -e

print_help=$1
backup_folder=/home/brent/Backup
timeshift_backup_folder=/home/timeshift
duplicity_opts="--no-encryption"

usage() {
  echo "timeshift-archive [-h]"
  echo "  => Backup timeshift backup to brent's home folder";
}

post_command_failed() {
  su brent -c "notify-send \"OS Backup: Service Exited Badly\"\" --icon=timeshift"
}

main() {
  if [ "$print_help" = "-h" ] || [ "$print_help" = "--help" ]; then
    usage; exit 0;
  fi

  full_backup_path=$(realpath $backup_folder)
  file_uri="file://$full_backup_path/."

  echo "Beginning OS backup script"

  su brent -c "notify-send \"OS Backup: Started\" \"\" --icon=timeshift"

  echo "Removing previous backup in $full_backup_path"

  rm -rf $full_backup_path/*

  echo "Backing up $timeshift_backup_folder to $full_backup_path"

  duplicity full $duplicity_opts $timeshift_backup_folder $file_uri

  backup_status=$?

  if [ $backup_status -ne 0 ]; then
    title="OS Backup: Failed"
  else
    title="OS Backup: Success"
  fi

  su brent -c "notify-send \"$title\" \"\" --icon=timeshift"

  if [ $backup_status -ne 0 ]; then
    echo "Duplicity exited with status ($backup_status)"
    exit 1
  fi

  chmod g+r,o+r $full_backup_path/*
}

trap post_command_failed INT

main
